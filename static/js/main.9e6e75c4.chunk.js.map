{"version":3,"sources":["components/Cart.jsx","components/Header.jsx","models/cart.js","components/Content.jsx","App.js","api/index.js","models/products.js","index.js"],"names":["connect","cart","data","dispatch","useState","visible","setVisible","total","reduce","item","product","price","quantity","toFixed","useEffect","window","localStorage","type","className","onClick","ShoppingCartOutlined","length","title","placement","closable","onClose","width","footer","style","height","position","disabled","headerStyle","textAlign","backgroundColor","bodyStyle","footerStyle","color","itemLayout","dataSource","renderItem","index","Item","src","sku","size","description","payload","id","key","SubMenu","Menu","products","count","sortGoods","a","theme","mode","icon","ProjectOutlined","fontSize","namespace","state","effects","addCart","put","setStorage","cdata","_data","JSON","parse","settlementData","decreaseNum","increaseNum","removeCart","reducers","saveItem","newData","finded","find","product_id","map","storage","stringify","setItem","removeGood","splice","console","log","increment","findIndex","installments","message","error","storageData","settlement","checkout","cutOne","Meta","Card","xs","sm","md","lg","marginTop","hoverable","cover","alt","isFreeShipping","toString","split","content","availableSizes","success","block","trigger","IndexPage","justify","margin","Content","getProducts","Promise","resolve","setTimeout","fetch","call","api","sortDatas","sort","b","save","addOne","setData","app","dva","history","createHistory","router","model","start"],"mappings":"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","file":"static/js/main.9e6e75c4.chunk.js","sourcesContent":["import React, { useState,useEffect } from \"react\";\r\nimport { Drawer, List, Image } from \"antd\";\r\nimport { ShoppingCartOutlined } from \"@ant-design/icons\";\r\nimport \"../App.css\";\r\nimport 'antd/dist/antd.css';\r\n\r\nimport { connect } from \"dva\";\r\n\r\nconst Cart = ({ cart, dispatch }) => {\r\n  const [visible, setVisible] = useState(false);\r\n  const showDrawer = () => {\r\n    setVisible(true);\r\n  };\r\n  const onClose = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const total = cart\r\n    .reduce((total, item) => total + item.product.price * item.quantity, 0)\r\n    .toFixed(2);\r\n\r\n    useEffect(()=> {\r\n      if(window.localStorage.data){\r\n        dispatch({type:\"cart/setStorage\"})\r\n      }\r\n    },[])\r\n  return (\r\n    <>\r\n      <button className=\"cartBtn\" onClick={showDrawer}>\r\n        <ShoppingCartOutlined /><span className=\"showCount\">{cart.length}</span>\r\n      </button>\r\n      <div className=\"cartDiv\">\r\n        <Drawer\r\n          title={\r\n            <div>\r\n              <div className={visible ? \"countCart\" : \"\"}>\r\n                {cart.length}\r\n              </div>\r\n              <span className=\"titleCart\">\r\n                <ShoppingCartOutlined />\r\n                Cart\r\n              </span>\r\n            </div>\r\n          }\r\n          placement=\"right\"\r\n          closable={false}\r\n          onClose={onClose}\r\n          visible={visible}\r\n          width={\"35%\"}\r\n          footer={\r\n            <div style={{ height: \"100px\", position: \"relative\" }}>\r\n              <span className=\"totalTitle\">Total: </span>\r\n              <span className=\"totalNum\">$ {total}</span>\r\n              <br />\r\n              <button\r\n                onClick={() =>\r\n                  dispatch({\r\n                    type: \"cart/checkout\",\r\n                  })\r\n                }\r\n                disabled={cart.length === 0}\r\n                className=\"checkBtn\"\r\n              >\r\n                Check Out\r\n              </button>\r\n            </div>\r\n          }\r\n          headerStyle={{ textAlign: \"center\", backgroundColor: \"#1b1a20\" }}\r\n          bodyStyle={{ backgroundColor: \"#1b1a20\" }}\r\n          footerStyle={{ backgroundColor: \"#1b1a20\", color: \"#fff\" }}\r\n        >\r\n          {cart.length === 0 ? (\r\n            <h1 style={{ color: \"#fff\" }}>Your Shopping-Cart is empty!</h1>\r\n          ) : (\r\n            <div>\r\n              <List\r\n                itemLayout=\"horizontal\"\r\n                dataSource={cart}\r\n                renderItem={(item, index) => (\r\n                  <List.Item>\r\n                    <Image\r\n                      src={`./img/${item.product.sku}_1.jpg`}\r\n                      className=\"cartImg\"\r\n                    />\r\n                    <div className=\"detail\">\r\n                      {item.product.title}\r\n                      <br />\r\n                      <span>\r\n                        {item.size} | {item.product.description}\r\n                      </span>\r\n                      <br />\r\n                      <span>quantity: {item.quantity}</span>\r\n                    </div>\r\n                    <div>\r\n                      <button\r\n                        className=\"btnDel\"\r\n                        onClick={() => {\r\n                          dispatch({\r\n                            type: \"cart/removeCart\",\r\n                            payload: {\r\n                              index: index,\r\n                            },\r\n                          });\r\n                        }}\r\n                      >\r\n                        X\r\n                      </button>\r\n                      <p className=\"goodsPrice\">${item.product.price}</p>\r\n                      <p>\r\n                        <button\r\n                          className=\"btnDecrement\"\r\n                          onClick={() => {\r\n                            dispatch({\r\n                              type: \"cart/decreaseNum\",\r\n                              payload: {\r\n                                id: item.id,\r\n                                size: item.size,\r\n                                key: -1,\r\n                              },\r\n                            });\r\n                          }}\r\n                        >\r\n                          -\r\n                        </button>\r\n                        <button\r\n                          className=\"btnIncrement\"\r\n                          onClick={() => {\r\n                            dispatch({\r\n                              type: \"cart/increaseNum\",\r\n                              payload: {\r\n                                id: item.id,\r\n                                size: item.size,\r\n                                key: 1,\r\n                              },\r\n                            });\r\n                          }}\r\n                        >\r\n                          +\r\n                        </button>\r\n                      </p>\r\n                    </div>\r\n                  </List.Item>\r\n                )}\r\n              />\r\n            </div>\r\n          )}\r\n        </Drawer>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ cart }) => ({\r\n  cart: cart.data,\r\n});\r\nexport default connect(mapStateToProps)(Cart);\r\n","import React from \"react\";\r\nimport { connect } from \"dva\";\r\nimport { Menu } from \"antd\";\r\nimport { ProjectOutlined } from \"@ant-design/icons\";\r\nimport  \"../App.css\";\r\n\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nconst Header = ({ count, dispatch, products }) => {\r\n  const sortGoods = async (key) => {\r\n    await dispatch({\r\n      type: \"products/sortDatas\",\r\n      payload: {\r\n        product: products,\r\n        key,\r\n      },\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"header\">\r\n      <span className=\"headerLeft\">{count} Products found</span>\r\n\r\n      <span className=\"headerRight\">\r\n        <Menu theme=\"light\" mode=\"horizontal\">\r\n          <SubMenu\r\n            icon={<ProjectOutlined />}\r\n            style={{ color: \"#000\", fontSize: \"18px\" }}\r\n            title=\"Order by\"\r\n          >\r\n            <Menu.Item key=\"setting:1\" onClick={() => sortGoods(\"\")}>\r\n              默认\r\n            </Menu.Item>\r\n            <Menu.Item key=\"setting:2\" onClick={() => sortGoods(\"asc\")}>\r\n              价格升序\r\n            </Menu.Item>\r\n            <Menu.Item key=\"setting:3\" onClick={() => sortGoods(\"desc\")}>\r\n              价格降序\r\n            </Menu.Item>\r\n          </SubMenu>\r\n        </Menu>\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ products }) => ({\r\n  products: products.data,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Header);\r\n","import { message } from \"antd\";\r\nexport default {\r\n  namespace: \"cart\",\r\n  state: {\r\n    data: [],\r\n  },\r\n  effects: {\r\n    *addCart({ payload }, { put }) {\r\n      yield put({ type: \"products/addCart\", payload });\r\n      yield put({ type: \"saveItem\", payload });\r\n    },\r\n    *setStorage({},{ put }){\r\n      yield put ({\r\n        type:\"storageData\",\r\n        cdata:{\r\n          _data: JSON.parse(window.localStorage.data)\r\n        }\r\n      })\r\n    },\r\n    *settlementData({},{put}){\r\n      yield put({type:\"settlement\"})\r\n    },\r\n    *decreaseNum({ payload },{put}) {\r\n      yield put({\r\n        type:'cutOne',\r\n        payload\r\n      })\r\n      yield put({\r\n        type:'products/addOne',\r\n        payload\r\n      })\r\n    },*increaseNum({payload}, {put}){\r\n      yield put ({\r\n        type:\"increment\",\r\n        payload\r\n      })\r\n    },*removeCart({payload}, {put}){\r\n      yield put ({\r\n        type:\"removeGood\",\r\n        payload\r\n      })\r\n    }\r\n  },\r\n  reducers: {\r\n    saveItem(state, { payload }) {\r\n      const {data} = state\r\n      let newData = [];\r\n      const finded = data.find(\r\n        (item) =>\r\n          item.product_id === payload.product_id && item.size === payload.size\r\n      );\r\n      if (finded) {\r\n        finded.quantity += payload.quantity;\r\n        newData = data.map((item) =>\r\n          item.product_id === finded.product_id && item.size === finded.size\r\n            ? finded\r\n            : item\r\n        );\r\n      } else {\r\n        newData = [...data, payload];\r\n      }\r\n      \r\n      const storage = window.localStorage\r\n      let _data = JSON.stringify(data)\r\n      storage.setItem(\"data\",_data)\r\n      return {\r\n        data: newData,\r\n      };\r\n    },\r\n    removeGood(state, { payload }) {\r\n      const {data} = state\r\n      data.splice(payload.index, 1);\r\n      \r\n      const storage = window.localStorage\r\n      let _data = JSON.stringify(data)\r\n      storage.setItem(\"data\",_data)\r\n      console.log(_data,'remove');\r\n\r\n      return { data: [...data] };\r\n    },\r\n    increment(state, { payload }) {\r\n      const { data } = state;\r\n      const index = data.findIndex(\r\n        (item) => item.id === payload.id && item.size === payload.size\r\n      );\r\n      if (data[index].product.installments === 0) {\r\n        message.error(\"库存不足\");\r\n      } else {\r\n        data[index].quantity += payload.key;\r\n        data[index].product.installments -= payload.key;\r\n        console.log(data[index].quantity);\r\n      }\r\n      const storage = window.localStorage\r\n      let _data = JSON.stringify(data)\r\n      storage.setItem(\"data\",_data)\r\n      console.log(_data,'increase');\r\n\r\n      return { data: [...data] };\r\n    },\r\n    \r\n    storageData(state,{cdata}){\r\n      return {\r\n        data:cdata._data\r\n      }\r\n    },\r\n    settlement(state,{data}){\r\n      const storage = window.localStorage\r\n      let _data = JSON.stringify(data)\r\n      storage.setItem(\"data\",_data)\r\n      console.log(_data,'settlement');\r\n\r\n      return{\r\n        ...state,\r\n        data:data._data\r\n      }\r\n    },\r\n    checkout(state) {\r\n      const {data} = state\r\n      data.splice(0,data.length)\r\n      const storage = window.localStorage\r\n      let _data = JSON.stringify(data)\r\n      storage.setItem(\"data\",_data)\r\n      return {\r\n        data: [...data],\r\n      };\r\n    },\r\n    cutOne(state,{payload}){\r\n      const { data } = state;\r\n      const index = data.findIndex(\r\n        (item) => item.id === payload.id && item.size === payload.size\r\n      );\r\n      if (data[index].quantity === 1) {\r\n        message.error(\"库存只有一件啦，不能再减了\");\r\n      } else {\r\n        data[index].quantity += payload.key;\r\n        data[index].product.installments -= payload.key;\r\n        console.log(data[index].product.installments);\r\n      }\r\n      const storage = window.localStorage\r\n      let _data = JSON.stringify(data)\r\n      storage.setItem(\"data\",_data)\r\n\r\n      return { data: [...data] };\r\n    }\r\n  },\r\n};\r\n","import React, { useEffect, Fragment } from \"react\";\r\nimport { Card, Popover, Button, Col, List, message } from \"antd\";\r\nimport Header from \"./Header\";\r\nimport \"../App.css\";\r\nimport { connect } from \"dva\";\r\nimport cart from \"../models/cart\";\r\n\r\n\r\nconst { Meta } = Card;\r\n\r\nconst Products = ({ dispatch, products }) => {\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: \"products/fetch\",\r\n      payload: {},\r\n    });\r\n  }, []);\r\n\r\n  useEffect(()=>{\r\n    dispatch({\r\n      type: \"products/fetch\",\r\n      payload:{}\r\n    });\r\n  },[cart])\r\n\r\n  useEffect(()=> {\r\n    if(window.localStorage.data){\r\n      dispatch({type:\"cart/setStorage\"})\r\n    }else{\r\n      return null\r\n    }\r\n  },[])\r\n\r\n  return (\r\n    <Fragment>\r\n      <Header count={products.length} />\r\n      {products.map((item, index) => {\r\n        return (\r\n          <Col\r\n            xs={20}\r\n            sm={10}\r\n            md={7}\r\n            lg={5}\r\n            key={item.id}\r\n            style={{ marginTop: \"15px\" }}\r\n          >\r\n            <Card\r\n              hoverable\r\n              cover={<img alt=\"ex\" src={`./img/${item.sku}_1.jpg`} />}\r\n              style={{ textAlign: \"center\" }}\r\n            >\r\n              {item.isFreeShipping?<div style={{position:'relative'}}>\r\n                <span className=\"freeShip\">Free Shipping</span>\r\n              </div>:''}\r\n              <Meta title={item.title} />\r\n              <span className=\"contentLine\">————</span>\r\n              <br />\r\n              <span className=\"price\">$</span>\r\n              <span className=\"priceInt\">\r\n                {item.price - (item.price % 1)}\r\n              </span>\r\n              <span className=\"priceFloat\">\r\n                {item.price % 1 === 0\r\n                  ? \"\"\r\n                  : \".\" + item.price.toString().split(\".\")[1]}\r\n              </span>\r\n              <br />\r\n             \r\n                  \r\n              <Popover\r\n                content={\r\n                  <List\r\n                    size=\"small\"\r\n                    dataSource={item.availableSizes}\r\n                    renderItem={(size) => (\r\n                      <List.Item>\r\n                        <Button\r\n                          disabled={item.installments===0}\r\n                          onClick={() => {\r\n                            dispatch({\r\n                              type: \"cart/addCart\",\r\n                              payload: {\r\n                                product_id: item.id,\r\n                                quantity: item.installments > 0 ? 1 : 0,\r\n                                product: item,\r\n                                size: size,\r\n                              },\r\n                            });\r\n                            item.installments === 0\r\n                              ? message.error(\"库存不足\")\r\n                              : message.success(\"添加成功\");\r\n                          }}\r\n                          block\r\n                        >\r\n                          {size}\r\n                          {console.log(item.installments,'库存')}\r\n                        </Button>\r\n                        \r\n                      </List.Item>\r\n                    )}\r\n                  />\r\n                }\r\n                title=\"选择你的尺码\"\r\n                trigger=\"click\"\r\n              >\r\n                <button\r\n                  disabled={item.installments === 0}\r\n                  className=\"contentBtn\"\r\n                >\r\n                  Add to Car\r\n                </button>\r\n              </Popover>\r\n            </Card>\r\n          </Col>\r\n        );\r\n      })}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ products }) => ({\r\n  products: products.data,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Products);\r\n","import React from \"react\";\nimport { Row } from \"antd\";\nimport 'antd/dist/antd.css';\nimport Cart from \"./components/Cart\";\nimport Contents from \"./components/Content\";\n\n\n\nfunction IndexPage() {\n  return (\n    <>\n      <Cart />\n      <Row type=\"flex\" justify=\"space-around\" style={{ margin: \"90px 45px 0\" }}>\n        <Contents />\n      </Row>\n    </>\n  );\n}\n\nexport default IndexPage;\n","import products from \"./shopdata.json\";\r\n\r\nexport const getProducts = () => {\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => resolve(products), 1000);\r\n  });\r\n};\r\n","import * as api from \"../api/index\";\r\n\r\nexport default {\r\n  namespace: \"products\",\r\n  state: {\r\n    data: [],\r\n  },\r\n  effects: {\r\n    *fetch({ payload: {} }, { call, put }) {\r\n      const data = yield call(api.getProducts, {});\r\n      yield put({ type: \"save\", payload: { data } });\r\n    },\r\n    *sortDatas({ payload: { product, key } }, { put }) {\r\n      let newData = [];\r\n      if (key === \"asc\") {\r\n        newData = product.sort((a, b) => a[\"price\"] - b[\"price\"]);\r\n      } else if (key === \"desc\") {\r\n        newData = product.sort((a, b) => b[\"price\"] - a[\"price\"]);\r\n      } else {    \r\n       // product.map((item) => console.log(item[\"price\"]))\r\n        // newData = product.filter((item) => {\r\n        //   return item.availableSizes.includes(\"XL\")\r\n        // });\r\n        // console.log(newData);\r\n  \r\n        newData = product.sort((a, b) => a[\"id\"] - b[\"id\"]);\r\n      }\r\n      yield put({\r\n        type: \"setData\",\r\n        data: [...newData],\r\n      });\r\n    },\r\n  },\r\n  reducers: {\r\n    save(state, { payload }) {\r\n      return {\r\n        data: payload.data,\r\n      };\r\n    },\r\n    addOne(state,{payload}){\r\n      const {data} = state\r\n      const newData = JSON.parse(JSON.stringify(data))\r\n      newData.map((item)=>{\r\n        if(item.id = payload.product_id){\r\n          ++item.installments\r\n        }\r\n      })\r\n      return {\r\n        data:newData\r\n      }\r\n    },\r\n    addCart(state, { payload }) {\r\n      const newData = state.data.map((item) => {\r\n        if (item.id === payload.product_id && item.installments > 0) {\r\n          item.installments--;\r\n          return item;\r\n        }\r\n        return item;\r\n      });\r\n      return {\r\n        data: newData,\r\n      };\r\n    },\r\n    setData(state, payload) {\r\n      return {\r\n        ...state,\r\n        data: [...payload.data],\r\n      };\r\n    },\r\n  },\r\n};\r\n","import dva from 'dva'\nimport App from './App';\nimport cart from './models/cart'\nimport products from './models/products'\nimport { createBrowserHistory as createHistory } from 'history'\n\nconst app = dva({\n    history: createHistory()\n});\napp.router(() => <App />);\napp.model(products);\napp.model(cart);\napp.start(\"#root\");"],"sourceRoot":""}
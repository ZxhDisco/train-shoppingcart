[{"C:\\Code\\trainwork\\shopc\\src\\index.js":"1","C:\\Code\\trainwork\\shopc\\src\\App.js":"2","C:\\Code\\trainwork\\shopc\\src\\components\\Cart.jsx":"3","C:\\Code\\trainwork\\shopc\\src\\components\\Content.jsx":"4","C:\\Code\\trainwork\\shopc\\src\\components\\Header.jsx":"5","C:\\Code\\trainwork\\shopc\\src\\models\\products.js":"6","C:\\Code\\trainwork\\shopc\\src\\models\\cart.js":"7","C:\\Code\\trainwork\\shopc\\src\\api\\index.js":"8"},{"size":321,"mtime":1608527705380,"results":"9","hashOfConfig":"10"},{"size":317,"mtime":1608780525143,"results":"11","hashOfConfig":"10"},{"size":5582,"mtime":1608638429169,"results":"12","hashOfConfig":"10"},{"size":3609,"mtime":1608780556259,"results":"13","hashOfConfig":"10"},{"size":2115,"mtime":1608779737512,"results":"14","hashOfConfig":"10"},{"size":2413,"mtime":1608639753810,"results":"15","hashOfConfig":"10"},{"size":3922,"mtime":1608637165223,"results":"16","hashOfConfig":"10"},{"size":322,"mtime":1608608300441,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1db5kvp",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\Code\\trainwork\\shopc\\src\\index.js",[],["38","39"],"C:\\Code\\trainwork\\shopc\\src\\App.js",[],"C:\\Code\\trainwork\\shopc\\src\\components\\Cart.jsx",["40"],"import React, { useState,useEffect } from \"react\";\r\nimport { Drawer, List, Image, message } from \"antd\";\r\nimport { ShoppingCartOutlined } from \"@ant-design/icons\";\r\nimport \"../App.css\";\r\nimport 'antd/dist/antd.css';\r\n\r\nimport { connect } from \"dva\";\r\n\r\nconst Cart = ({ cart, dispatch }) => {\r\n  const [visible, setVisible] = useState(false);\r\n  const [check, setCheck] = useState(true)\r\n  const showDrawer = () => {\r\n    setVisible(true);\r\n  };\r\n  const onClose = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const total = cart\r\n    .reduce((total, item) => total + item.product.price * item.quantity, 0)\r\n    .toFixed(2);\r\n\r\n    useEffect(()=> {\r\n      if(window.localStorage.data){\r\n        dispatch({type:\"cart/setStorage\"})\r\n      }\r\n    },[])\r\n  return (\r\n    <>\r\n      <button className=\"cartBtn\" onClick={showDrawer}>\r\n        <ShoppingCartOutlined /><span className=\"showCount\">{cart.length}</span>\r\n      </button>\r\n      <div className=\"cartDiv\">\r\n        <Drawer\r\n          title={\r\n            <div>\r\n              <div className={visible ? \"countCart\" : \"\"}>\r\n                {cart.length}\r\n              </div>\r\n              <span className=\"titleCart\">\r\n                <ShoppingCartOutlined />\r\n                Cart\r\n              </span>\r\n            </div>\r\n          }\r\n          placement=\"right\"\r\n          closable={false}\r\n          onClose={onClose}\r\n          visible={visible}\r\n          width={\"35%\"}\r\n          footer={\r\n            <div style={{ height: \"100px\", position: \"relative\" }}>\r\n              <span className=\"totalTitle\">Total: </span>\r\n              <span className=\"totalNum\">$ {total}</span>\r\n              <br />\r\n              <button\r\n                onClick={() => {\r\n                  if(check){\r\n                    message.warn(`合计${total},再次点击即可结算`)\r\n                    setCheck(false)\r\n                    return\r\n                  }else {\r\n                    dispatch({\r\n                      type: \"cart/checkout\",\r\n                    })\r\n                    setCheck(true)\r\n                  }\r\n                   \r\n                }\r\n                  \r\n                }\r\n                disabled={cart.length === 0}\r\n                className=\"checkBtn\"\r\n              >\r\n                Check Out\r\n              </button>\r\n            </div>\r\n          }\r\n          headerStyle={{ textAlign: \"center\", backgroundColor: \"#1b1a20\" }}\r\n          bodyStyle={{ backgroundColor: \"#1b1a20\" }}\r\n          footerStyle={{ backgroundColor: \"#1b1a20\", color: \"#fff\" }}\r\n        >\r\n          {cart.length === 0 ? (\r\n            <h1 style={{ color: \"#fff\" }}>Your Shopping-Cart is empty!</h1>\r\n          ) : (\r\n            <div>\r\n              <List\r\n                itemLayout=\"horizontal\"\r\n                dataSource={cart}\r\n                renderItem={(item, index) => (\r\n                  <List.Item key={item.sku}>\r\n                    <Image\r\n                      src={`./img/${item.product.sku}_1.jpg`}\r\n                      className=\"cartImg\"\r\n                    />\r\n                    <div className=\"detail\">\r\n                      {item.product.title}\r\n                      <br />\r\n                      <span>\r\n                        {item.size} | {item.product.description}\r\n                      </span>\r\n                      <br />\r\n                      <span>quantity: {item.quantity}</span>\r\n                    </div>\r\n                    <div>\r\n                      <button\r\n                        className=\"btnDel\"\r\n                        onClick={() => {\r\n                          dispatch({\r\n                            type: \"cart/removeCart\",\r\n                            payload: {\r\n                              index: index,\r\n                              quantity:item.quantity\r\n                            },\r\n                          });\r\n                        }}\r\n                      >\r\n                        X\r\n                      </button>\r\n                      <p className=\"goodsPrice\">${item.product.price}</p>\r\n                      <p>\r\n                        <button\r\n                          className=\"btnDecrement\"\r\n                          onClick={() => {\r\n                            dispatch({\r\n                              type: \"cart/decreaseNum\",\r\n                              payload: {\r\n                                id: item.id,\r\n                                size: item.size,\r\n                                key: -1,\r\n                              },\r\n                            });\r\n                          }}\r\n                        >\r\n                          -\r\n                        </button>\r\n                        <button\r\n                          className=\"btnIncrement\"\r\n                          onClick={() => {\r\n                            dispatch({\r\n                              type: \"cart/increaseNum\",\r\n                              payload: {\r\n                                id: item.id,\r\n                                size: item.size,\r\n                                key: 1,\r\n                              },\r\n                            });\r\n                          }}\r\n                        >\r\n                          +\r\n                        </button>\r\n                      </p>\r\n                    </div>\r\n                  </List.Item>\r\n                )}\r\n              />\r\n            </div>\r\n          )}\r\n        </Drawer>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ cart }) => ({\r\n  cart: cart.data,\r\n});\r\nexport default connect(mapStateToProps)(Cart);\r\n","C:\\Code\\trainwork\\shopc\\src\\components\\Content.jsx",["41","42","43"],"C:\\Code\\trainwork\\shopc\\src\\components\\Header.jsx",[],"C:\\Code\\trainwork\\shopc\\src\\models\\products.js",["44","45","46"],"import * as api from \"../api/index\";\r\nimport {message} from 'antd'\r\n\r\nexport default {\r\n  namespace: \"products\",\r\n  state: {\r\n    data: [],\r\n    shopData:[]\r\n  },\r\n  effects: {\r\n    *fetch({ payload }, { call, put }) {\r\n      const res = yield call(api.getProducts);\r\n      console.log(res);\r\n      if(res){\r\n        yield put({ type: \"saveData\", payload: {res} });\r\n        yield put({ type: \"saveShopdata\", payload: {res} });\r\n      }else{\r\n        message.error(\"未找到数据\")\r\n      }\r\n      \r\n\r\n    },\r\n    *sortDatas({ payload: { product, key,bol } }, { put }) {\r\n      let newData = [];\r\n      if(bol){\r\n        if(key) {\r\n          product.forEach(item => {\r\n            for(let i = 0;i < item.availableSizes.length;i++){\r\n              if(item.availableSizes[i] === key){\r\n                newData.push(item)\r\n              }\r\n            }\r\n          })\r\n        }\r\n      }else{\r\n        if (key === \"asc\") {\r\n          newData = product.sort((a, b) => a[\"price\"] - b[\"price\"]);\r\n        } else if (key === \"desc\") {\r\n          newData = product.sort((a, b) => b[\"price\"] - a[\"price\"]);\r\n        }\r\n        else {    \r\n          newData = product.sort((a, b) => a[\"id\"] - b[\"id\"]);\r\n        }\r\n      }\r\n      \r\n      yield put({\r\n        type: \"setData\",\r\n        data: [...newData],\r\n      });\r\n    },\r\n  },\r\n  reducers: {\r\n    saveData(state, payload ) {\r\n      console.log(payload,'12323');\r\n      \r\n      const {res} = payload.payload\r\n      return {\r\n        ...state,\r\n        data: res,\r\n      };\r\n    },\r\n    saveShopdata(state, payload ) {\r\n      const {res} = payload.payload\r\n      return {\r\n        ...state,\r\n        shopData: res,\r\n      };\r\n    },\r\n    addOne(state,{payload}){\r\n      const {data} = state\r\n      const newData = JSON.parse(JSON.stringify(data))\r\n      newData.map((item)=>{\r\n        if(item.id = payload.product_id){\r\n          ++item.installments\r\n        }\r\n      })\r\n      return {\r\n        data:newData\r\n      }\r\n    },\r\n    addCart(state, { payload }) {\r\n      const newData = state.data.map((item) => {\r\n        if (item.id === payload.product_id && item.installments > 0) {\r\n          item.installments--;\r\n          return item;\r\n        }\r\n        return item;\r\n      });\r\n      return {\r\n        data: newData,\r\n      };\r\n    },\r\n    setData(state, payload) {\r\n      return {\r\n        ...state,\r\n        data: [...payload.data],\r\n      };\r\n    },\r\n  },\r\n};\r\n","C:\\Code\\trainwork\\shopc\\src\\models\\cart.js",["47"],"import { message } from \"antd\";\r\nexport default {\r\n  namespace: \"cart\",\r\n  state: {\r\n    data: [],\r\n  },\r\n  effects: {\r\n    *addCart({ payload }, { put }) {\r\n      yield put({ type: \"products/addCart\", payload });\r\n      yield put({ type: \"saveItem\", payload });\r\n    },\r\n    *setStorage({payload},{put }){\r\n      yield put ({\r\n        type:\"storageData\",\r\n        cdata:{\r\n          _data: JSON.parse(window.localStorage.data)\r\n        }\r\n      })\r\n    },\r\n    *settlementData({payload},{put}){\r\n      yield put({type:\"settlement\"})\r\n    },\r\n    *decreaseNum({ payload },{put}) {\r\n      yield put({\r\n        type:'cutOne',\r\n        payload\r\n      })\r\n      yield put({\r\n        type:'products/addOne',\r\n        payload\r\n      })\r\n    },*increaseNum({payload}, {put}){\r\n      yield put ({\r\n        type:\"increment\",\r\n        payload\r\n      })\r\n    },*removeCart({payload}, {put}){\r\n      yield put ({\r\n        type:\"removeGood\",\r\n        payload\r\n      })\r\n    }\r\n  },\r\n  reducers: {\r\n    saveItem(state, { payload }) {\r\n      const {data} = state\r\n      let newData = [];\r\n      const finded = data.find(\r\n        (item) =>\r\n          item.product_id === payload.product_id && item.size === payload.size\r\n      );\r\n      if (finded) {\r\n        finded.quantity += payload.quantity;\r\n        newData = data.map((item) =>\r\n          item.product_id === finded.product_id && item.size === finded.size\r\n            ? finded\r\n            : item\r\n        );\r\n      } else {\r\n        newData = [...data, payload];\r\n      }\r\n      \r\n      const storage = window.localStorage\r\n      let _data = JSON.stringify(data)\r\n      storage.setItem(\"data\",_data)\r\n      return {\r\n        data: newData,\r\n      };\r\n    },\r\n    removeGood(state, { payload }) {\r\n      const {data} = state\r\n      data[payload.index].product.installments += payload.quantity\r\n      data.splice(payload.index, 1);\r\n      console.log(data);\r\n      \r\n      \r\n      const storage = window.localStorage\r\n      let _data = JSON.stringify(data)\r\n      storage.setItem(\"data\",_data)\r\n      return { \r\n        ...state,\r\n        data: [...data] };\r\n    },\r\n    increment(state, { payload }) {\r\n      const { data } = state;\r\n      const index = data.findIndex(\r\n        (item) => item.id === payload.id && item.size === payload.size\r\n      );\r\n      if (data[index].product.installments === 0) {\r\n        message.error(\"库存不足\");\r\n      } else {\r\n        data[index].quantity += payload.key;\r\n        data[index].product.installments -= payload.key;\r\n      }\r\n      const storage = window.localStorage\r\n      let _data = JSON.stringify(data)\r\n      storage.setItem(\"data\",_data)\r\n\r\n      return { data: [...data] };\r\n    },\r\n    \r\n    storageData(state,{cdata}){\r\n      return {\r\n        data:cdata._data\r\n      }\r\n    },\r\n    settlement(state,{data}){\r\n      const storage = window.localStorage\r\n      let _data = JSON.stringify(data)\r\n      storage.setItem(\"data\",_data)\r\n\r\n      return{\r\n        ...state,\r\n        data:data._data\r\n      }\r\n    },\r\n    checkout(state) {\r\n      const {data} = state\r\n      data.splice(0,data.length)\r\n      const storage = window.localStorage\r\n      let _data = JSON.stringify(data)\r\n      storage.setItem(\"data\",_data)\r\n      return {\r\n        data: [...data],\r\n      };\r\n    },\r\n    cutOne(state,{payload}){\r\n      const { data } = state;\r\n      const index = data.findIndex(\r\n        (item) => item.id === payload.id && item.size === payload.size\r\n      );\r\n      if (data[index].quantity === 1) {\r\n        message.error(\"库存只有一件啦，不能再减了\");\r\n      } else {\r\n        data[index].quantity += payload.key;\r\n        data[index].product.installments -= payload.key;\r\n        console.log(data[index].product.installments);\r\n      }\r\n      const storage = window.localStorage\r\n      let _data = JSON.stringify(data)\r\n      storage.setItem(\"data\",_data)\r\n\r\n      return { data: [...data] };\r\n    }\r\n  },\r\n};\r\n","C:\\Code\\trainwork\\shopc\\src\\api\\index.js",[],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":27,"column":7,"nodeType":"54","endLine":27,"endColumn":9,"suggestions":"55"},{"ruleId":"52","severity":1,"message":"53","line":17,"column":5,"nodeType":"54","endLine":17,"endColumn":15,"suggestions":"56"},{"ruleId":"52","severity":1,"message":"57","line":19,"column":13,"nodeType":"58","endLine":31,"endColumn":4},{"ruleId":"52","severity":1,"message":"53","line":31,"column":5,"nodeType":"54","endLine":31,"endColumn":7,"suggestions":"59"},{"ruleId":"60","severity":1,"message":"61","line":4,"column":1,"nodeType":"62","endLine":100,"endColumn":3},{"ruleId":"63","severity":1,"message":"64","line":72,"column":25,"nodeType":"58","messageId":"65","endLine":72,"endColumn":27},{"ruleId":"66","severity":1,"message":"67","line":73,"column":12,"nodeType":"68","messageId":"69","endLine":73,"endColumn":40},{"ruleId":"60","severity":1,"message":"61","line":2,"column":1,"nodeType":"62","endLine":146,"endColumn":3},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array. If 'dispatch' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["72"],["73"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression",["74"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","no-global-assign","no-unsafe-negation",{"desc":"75","fix":"76"},{"desc":"77","fix":"78"},{"desc":"75","fix":"79"},"Update the dependencies array to be: [dispatch]",{"range":"80","text":"81"},"Update the dependencies array to be: [cartData, dispatch]",{"range":"82","text":"83"},{"range":"84","text":"81"},[742,744],"[dispatch]",[408,418],"[cartData, dispatch]",[700,702]]